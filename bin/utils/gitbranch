#!/bin/bash

# Listing branch name of git repository
# Usage: gitbranch
function gitbranch() {
    # Color definitions
    GREEN='\033[0;32m'
    RESET='\033[0m'

    # Get current branch
    current_branch=$(git rev-parse --abbrev-ref HEAD)

    # Get all branch data first
    branch_data=$(git for-each-ref --sort=-committerdate refs/heads/ --format='%(refname:short)' | head -n 10)

    # Calculate max branch name length from actual data
    max_branch_length=$(echo "$branch_data" | awk '{print length($1)}' | sort -nr | head -1)

    # Set minimum width for "Branch Name" header (4 chars) and add padding
    header_length=4
    max_length=$((max_branch_length > header_length ? max_branch_length : header_length))

    # Calculate Status column width dynamically
    status_header_length=6
    max_status_length=7
    status_length=$((max_status_length > status_header_length ? max_status_length : status_header_length))

    # Print table header
    printf "+%s+%s+\n" "$(printf '%*s' $((status_length + 2)) | tr ' ' '-')" "$(printf '%*s' $((max_length + 2)) | tr ' ' '-')"
    printf "| %-${status_length}s | %-${max_length}s |\n" "Status" "Name"
    printf "+%s+%s+\n" "$(printf '%*s' $((status_length + 2)) | tr ' ' '-')" "$(printf '%*s' $((max_length + 2)) | tr ' ' '-')"

    # Print branch data
    echo "$branch_data" | while read -r line; do
        branch_name="$line"

        # Check if branch is merged
        if [ "$branch_name" = "$current_branch" ]; then
            branch_status="Current"
        else
            merge_base=$(git merge-base "$current_branch" "$branch_name" 2>/dev/null)
            branch_commit=$(git rev-parse "$branch_name" 2>/dev/null)
            if [ "$merge_base" = "$branch_commit" ]; then
                branch_status="Merged"
                colored_status="${GREEN}Merged${RESET}"
            else
                branch_status="Active"
                colored_status="Active"
            fi
        fi

        # Use different formatting for colored vs non-colored status
        if [ "$branch_status" = "Current" ]; then
            printf "| %-${status_length}s | %-${max_length}s |\n" "$branch_status" "$branch_name"
        else
            printf "| "
            echo -en "$colored_status"
            printf "%*s | %-${max_length}s |\n" $((status_length - 6)) "" "$branch_name"
        fi
    done

    # Print table footer
    printf "+%s+%s+\n" "$(printf '%*s' $((status_length + 2)) | tr ' ' '-')" "$(printf '%*s' $((max_length + 2)) | tr ' ' '-')"
}
